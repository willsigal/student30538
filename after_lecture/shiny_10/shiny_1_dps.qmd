---
title: "Dashboards + Shiny I DPS"
author: "Peter Ganong and Maggie Shi"
date: today
date-format: long
format: 
    beamer:
        echo: true
        aspectratio: 169
        theme: default
        header-includes: |
            \renewcommand{\tightlist}{\setlength{\itemsep}{5ex}\setlength{\parskip}{0pt}}
            \setbeamertemplate{footline}[frame number]
            \usepackage{fvextra}
            \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
            \DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\{\}}
---

## Slider Input Solution 
![](pictures/sliderInput.png){ width=60% fig-align="center"}

- `n`: input a number
- `"N"`: label that is displayed on the slider
- `0`, `100`: minimum and maximum of slider
- `20`: initial value of slider 


## Going back to our basic app: `app.py` 

\footnotesize
:::: {.columns}

::: {.column width="50%"}
\AddToHookNext{env/Highlighting/begin}{\footnotesize}
```{python}
# | eval: false
# | echo: true 
from shiny import App, render, ui

app_ui = ui.page_fluid(
    ui.panel_title("Hello Shiny!"),
    ui.input_slider("n", "N", 0, 100, 20),
    ui.output_text_verbatim("txt"),
)


def server(input, output, session):
    @render.text
    def txt():
        return f"n*2 is {input.n() * 2}"


app = App(app_ui, server)
```
:::

::: {.column width="50%"}

\begin{center}Component: input slider\end{center}

**UI**: 

```{python}
# | eval: false
# | echo: true 
ui.input_slider("n", "N", 0, 100, 20)
```

**Server**:
```{python}
# | eval: false
# | echo: true 
@render.text
def txt():
    return f"n*2 is {input.n() * 2}"
```

- `n` on the UI side corresponds to `input.n()` on the server side 
- `n` stores the value that the selected through the slider and passes it to `input.n()`

:::
::::

\normalsize

<!-- Note: in words, the app is taking in the value of the slider and printing that value, multiplied by 2. So we can infer that "n" on the UI side is related to "input.n()" on the server side -->


## Debugging solution

1. Add commas
2. `import numpy as np` at the beginning of the script